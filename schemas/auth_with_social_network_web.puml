@startuml

title "Login via Social Network flow"
boundary "Identity Provider" as SN
actor User as U
boundary "Client APP" as GUI
control "access_service" as AC
database "access_service" as DB

autonumber

U-> GUI: Login via Social Network
activate GUI
GUI -> AC: query getSocialNetworkAuthUri(socialNetworkType, redirectUri)
activate AC
AC -> GUI: Uri
deactivate AC
GUI -> SN: Open Uri (+redirectUri)
deactivate GUI
activate SN
SN -> U: Accept request
activate U
U -> SN: Accept
deactivate U
SN -> GUI: Redirect to redirectUri (+code)
deactivate SN
activate GUI
GUI -> AC: mutation socialNetworkLogin(socialNetworkType, code)

activate AC
AC -> SN: Request user data by socialNetworkType and code
activate SN
SN -> AC: email, Social Network Id, Name, Avatar
deactivate SN
AC -> AC: Check if user with such email already exist
alt "user with such email already exist"
AC -> DB: create social network session without user_uid
activate DB
DB -> AC: ok
deactivate DB
AC -> GUI: success = true, userCreated = false, socialNetworkType, socialNetworkId, email
deactivate AC
GUI -> U: Merge account request
alt "user accept merge request"
U -> GUI: Accept
GUI -> AC: mutation addSocialNetworkIdToExistedUser(socialNetworkType, socialNetworkId, email)
activate AC
AC -> DB: create user,\nadd user_uid to social network session
activate DB
DB -> AC: ok
deactivate DB
AC -> GUI: success = true, userCreated = true, token, refresh token
else  "user with such email is not exist"
AC -> DB: create social network session with user_uid \ncreate user
activate DB
DB -> AC: ok
deactivate DB
AC -> GUI: success = true, userCreated = true, token, refresh token
deactivate AC
end
GUI -> U: Let's Vidaq
else #Pink"user reject merge request"
U -> GUI: Reject
GUI -> U: Register page
end

@enduml